---
import Hamburger from "@components/Burger.astro";
import Img from "@components/Img.astro";
import "./header.css";
import "./switch.css";
import NebulaLogo from "@components/NebulaLogo.astro";
import { discord, github, docs } from "@components/Consts.ts";
import logo from "@image/logo.png";
import Ultraviolet from "@image/Ultraviolet.png";
import Dynamic from "@image/Dynamic.png";
import Rammerhead from "@image/Rammerhead.png";
import Aero from "@image/Aero.png";

const { background, data: url } = Astro.props;

const routes = [
  { id: 1, title: "Search", path: ["/"] },
  { id: 2, title: "AI", path: ["/ai", "/ai/"] },
  { id: 3, title: "Games", path: ["/games", "/games/"] },
  { id: 4, title: "Music", path: ["/music", "/music/"] },
  {
    id: 5,
    title: "Plugins",
    path: [
      "/plugins/scripts",
      "/plugins/scripts/",
      "/plugins/themes",
      "/plugins/themes/"
    ]
  },
  {
    id: 6,
    title: "Settings",
    path: [
      "/settings/general",
      "/settings/general/",
      "/settings/privacy",
      "/settings/privacy/",
      "/settings/theme",
      "/settings/theme/",
      "/settings/cloaking",
      "/settings/cloaking/",
      "/settings/unblock",
      "/settings/unblock/"
    ]
  }
];

const currentLocation = routes.find((route) =>
  route.path.includes(url.pathname)
);

const currentDate = new Date().getTime();
---

<div class="header">
  <div class="top">
    <div class="top-left">
      <a href="/" data-cold>
        <Img src={logo} class="nav-icon" alt="Website Logo" />
      </a>
      <hr class="nav-slash" />
      <a target="_blank" href={github}>
        <NebulaLogo />
      </a>

      <div class="switch-btn-container">
        <div class="switch-btn-current">
          <Img src={Ultraviolet} alt="Current Proxy Logo" />
        </div>
        <div
          class="switch-btn"
          style={{ background: background || "var(--primary-bg-color)" }}
        >
          <a data-value="Dynamic" href="#">
            <Img src={Dynamic} class="nav-switch-img" alt="Dynamic Icon" />
             Dynamic
          </a>
          <a data-value="Ultraviolet" href="#">
            <Img
              src={Ultraviolet}
              class="nav-switch-img"
              alt="Ultraviolet Icon"
            />
             Ultraviolet
          </a>
          <a data-value="Rammerhead" href="#">
            <Img
              src={Rammerhead}
              class="nav-switch-img"
              alt="Rammerhead Icon"
            />
             Rammerhead
          </a>
          <a data-value="Aero" href="#">
            <Img src={Aero} class="nav-switch-img" alt="Aero Icon" />
             Aero 2.0
          </a>
        </div>
      </div>
      <div class="focus-mode-container">
        <!-- should we have a non-fullscreen mode, and if so how will we show to user different option? -->
        <svg
          xmlns="http://www.w3.org/2000/svg"
          height="1.3em"
          viewBox="0 0 448 512"
        >
          <style>
            .toggle-button {
              fill: #ddd;
              transition: fill 0.3s ease;
            }

            .toggle-button:hover {
              fill: #fff;
            }
          </style>
          <path
            class="toggle-button"
            d="M32 32C14.3 32 0 46.3 0 64v96c0 17.7 14.3 32 32 32s32-14.3 32-32V96h64c17.7 0 32-14.3 32-32s-14.3-32-32-32H32zM64 352c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7 14.3 32 32 32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H64V352zM320 32c-17.7 0-32 14.3-32 32s14.3 32 32 32h64v64c0 17.7 14.3 32 32 32s32-14.3 32-32V64c0-17.7-14.3-32-32-32H320zM448 352c0-17.7-14.3-32-32-32s-32 14.3-32 32v64H320c-17.7 0-32 14.3-32 32s14.3 32 32 32h96c17.7 0 32-14.3 32-32V352z"
          ></path>
        </svg>
      </div>
    </div>

    <div class="top-right">
      <a class="feedback-btn" href="mailto:admin@noctura.tech">
        <span class="nav-btn-title">Feedback</span>
      </a>

      <a class="extra-btn" href={discord}>
        <span class="nav-btn-title">Discord</span>
      </a>

      <a class="extra-btn" href="/changelog">
        <span class="nav-btn-title">Changelog</span>
      </a>

      <a class="extra-btn" href={docs}>
        <span class="nav-btn-title">Docs</span>
      </a>

      <Hamburger>
        <a
          href="https://classroom.google.com"
          class="hamburger-link"
          id="panic-button"
          target="_self">Panic</a
        >
        <a href="/credits" class="hamburger-link">Credits</a>
        <a href="/privacy" class="hamburger-link">Privacy Policy</a>
        <a href="/terms" class="hamburger-link">Terms of Service</a>
      </Hamburger>
    </div>
  </div>

  <div class="bottom">
    <div class="nav-btns">
      <div id="nav-move" class="nav-move"></div>
      {
        routes.map((route) => (
          <a
            class={`nav-btn ${
              currentLocation && currentLocation.id == route.id ? "active" : ""
            }`}
            href={route.path[0]}
          >
            <span class="nav-btn-title">{route.title}</span>
          </a>
        ))
      }
    </div>
    <div class="nav-time">
      <span class="nav-time-text clock-text"
        >{
          currentDate ? new Date(currentDate).toLocaleTimeString() : `0:0:0 AM`
        }</span
      >
      <span class="nav-time-text date-text"
        >{
          currentDate ? new Date(currentDate).toLocaleDateString() : `0/0/0000`
        }</span
      >
    </div>
  </div>

  <div class="top-banner"></div>

  <script is:inline data-cold>
    (function () {
      let hovered = false;

      onclick = function (e) {
        if (
          recursive(document.getElementsByClassName("switch-btn")[0]).includes(
            e.target
          )
        )
          return;

        const switchBtn = document.getElementsByClassName("switch-btn")[0];

        if (switchBtn.style.display == "block") {
          switchBtn.style.opacity = "0";
          setTimeout(function () {
            switchBtn.style.display = "none";
          }, 100);
        }
      };

      let onHover = (e) => {
        if (e.target.tagName !== "A") {
          for (var n = e.target.tagName; n.parentElement; n = n.parentElement) {
            if (n.tagName == "A") e.target = n;
          }
        }

        const rect = e.target.getBoundingClientRect();
        const btnRect = document
          .querySelector(".nav-btns")
          .getBoundingClientRect();

        document.getElementById("nav-move").style.width =
          rect.width - 10 + "px";
        document.getElementById("nav-move").style.height =
          rect.height + 4 + "px";

        requestAnimationFrame(() => {
          document.getElementById("nav-move").style.display = "block";
          document.getElementById("nav-move").style.opacity = "1";
        });

        if (!hovered) {
          document.getElementById("nav-move").style.transition = `0`;
          document.getElementById("nav-move").style.opacity = "0";
          document.getElementById("nav-move").style.transition = `0.2s`;
        }

        document.getElementById("nav-move").style.left = `${
          rect.x - btnRect.x + 5
        }px`;

        hovered = true;
      };

      let noHover = (e) => {
        if (e.target.tagName !== "A") return;

        const rect = e.target.getBoundingClientRect();

        if (e.clientY >= rect.bottom || e.clientY <= rect.top) {
          hovered = false;
          document.getElementById("nav-move").style.opacity = "0";
          setTimeout(function () {
            if (hovered) return;
            document.getElementById("nav-move").style.display = "none";
          }, 200);
        }
      };

      let toggleSwitchBtn = (e) => {
        const switchBtn = document.getElementsByClassName("switch-btn")[0];

        if (switchBtn.style.display == "block") {
          switchBtn.style.opacity = "0";
          setTimeout(function () {
            switchBtn.style.display = "none";
          }, 100);
        } else {
          switchBtn.style.display = "block";
          requestAnimationFrame(() => {
            switchBtn.style.opacity = "1";
          });
        }

        return e.stopPropagation();
      };

      let switchProxy = (e) => {
        e.stopPropagation();
        e.preventDefault();

        const proxy = e.target.dataset.value;

        document.cookie = `astro-proxy=${proxy}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/`;

        e.target.parentNode.style.opacity = "0";

        document.querySelector(".switch-btn-current img").src =
          document.querySelector("a[data-value='" + proxy + "'] img").src;

        document.querySelector(".switch-btn-current img").srcset =
          document.querySelector("a[data-value='" + proxy + "'] img").srcset;

        setTimeout(function () {
          e.target.parentNode.style.display = "none";
        }, 100);

        return;
      };

      let recursive = (el) => {
        var arr = [];

        function iterate(el) {
          if (el.childNodes)
            el.childNodes.forEach((e) => (arr.push(e), iterate(e)));

          return;
        }

        arr.push(el);

        iterate(el);

        return arr;
      };

      let switchBtnCurrent = document.querySelector(".switch-btn-current"),
        switchBtns = document.querySelectorAll("a[data-value]"),
        hamburgerLink = document.querySelector(".hamburger-link"),
        navBtns = document.querySelectorAll(".nav-btn");

      switchBtnCurrent.onclick = toggleSwitchBtn;
      switchBtns.forEach((btn) => (btn.onclick = switchProxy));
      hamburgerLink.onclick = (e) =>
        e.preventDefault() ||
        (typeof window !== "undefined" &&
          window.location.replace(
            localStorage.getItem("panic-url") || "https://classroom.google.com/"
          ));
      navBtns.forEach((btn) => {
        btn.onmouseover = onHover;
        btn.onmouseleave = noHover;
      });

      let focusMode = "off";
      let focusButton = document.querySelector(".focus-mode-container");
      document.body.addEventListener("fullscreenchange", function (e) {
        if (!document.fullscreenElement) {
          if (focusMode == "on") focusButton.click();
        }
      });

      focusButton.onclick = () => {
        const top = document.querySelector(".top");
        const bottom = document.querySelector(".bottom");
        const topRight = document.querySelector(".top-right");
        const topLeft = document.querySelector(".top-left");
        const navTime = document.querySelector(".nav-time");
        const siteFooter = document.querySelector(".site-footer");
        const navBtnsElement = document.querySelector(".nav-btns");

        if (focusMode == "off") {
          focusMode = "on";
          top.style.display = "none";
          bottom.style.marginTop = "10px";
          let hamburger = document.getElementById("burger-container");
          navBtnsElement.insertBefore(focusButton, navBtnsElement.firstChild);
          navTime.appendChild(hamburger);
          siteFooter.style.display = "none";
          document.body.requestFullscreen();
          return;
        }

        if (focusMode == "on") {
          focusMode = "off";
          top.style.display = "flex";
          bottom.style.marginTop = "";
          topLeft.appendChild(focusButton);
          let hamburger = document.getElementById("burger-container");
          topRight.appendChild(hamburger);
          siteFooter.style.display = "block";
          if (document.fullscreenElement) document.exitFullscreen();
          return;
        }
      };

      document
        .querySelector('a[href="/plugins/scripts"]')
        .setAttribute("data-cold", "");
      document.getElementById("panic-button").href =
        localStorage.getItem("panic-url") || "https://classroom.google.com/";
    })();
  </script>
</div>
