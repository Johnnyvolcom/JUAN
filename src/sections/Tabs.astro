---
import "./tabs.css";
---

<script type="module" data-cold>
let list = document.getElementById("tabs-list"),
  btn = document.getElementById("tabs-btn"),
  tl = document.querySelector(".header .top-left"),
  nb = document.querySelector(".header .nav-btns"),
  open = false,
  offset = 250,
  cache = await caches.open("astro-tabs");

list.style.width = `${offset}px`;

if (!window._init)
  btn.addEventListener("click", function () {
    document
      .querySelectorAll(".arrow")
      .forEach((e) => e.classList.toggle("arrow-open"));

    if (!open) {
      requestAnimationFrame(() => {
        list.style.left = `${offset}px`;
        btn.style.left = `${offset}px`;
        tl.style.paddingLeft = `${offset}px`;
        nb.style.marginLeft = `${offset}px`;
      });
      open = true;
    } else {
      requestAnimationFrame(() => {
        list.style.left = "";
        btn.style.left = "";
        tl.style.paddingLeft = "";
        nb.style.marginLeft = "";
      });
      open = false;
    }
  });

async function getData() {
  var keys = await cache.keys();
  var data = [];

  for await (var key of keys) {
    data.push(await cache.match(key).then((res) => res.json()));
  }

  return data;
}

window.saveTab = async function saveTab(id, title, href, pHref) {
  var data = { id, title, href, pHref /*, picture: await getPicture(href) */ };

  await cache.put(
    "/" + id + ".json",
    new Response(JSON.stringify(data), {
      headers: { "Content-Type": "application/json" }
    })
  );

  await loadTabs();

  return true;
};

window.removeTab = async function (id) {
  await cache.delete("/" + id + ".json");

  document.querySelector(`iframe[data-uuid="${id}"]`).remove();

  await loadTabs();

  return true;
};

async function frames(data) {
  async function load(id, title, href, pHref) {
    var frame = document.createElement("iframe");
    frame.classList.add("tab-frame", "proxy-iframe");
    frame.dataset.uuid = id;
    frame.src = pHref;
    frame.style.display = "none";

    document.body.appendChild(frame);

    console.log("Preloading " + href);

    frame.loading = new Promise(
      (resolve) => (
        frame.addEventListener("load", () =>
          console.log("Preloaded", href),
          resolve
        )
      )
    );
  }

  await Promise.allSettled(
    data.map(({ id, title, href, pHref }) => load(id, title, href, pHref))
  );

  return true;
}

async function loadTabs() {
  let data = await getData();
  if (!document.querySelector("iframe[data-uuid]")) frames(data);
  list.innerHTML = data.length
    ? data
      .map(
        ({ id, href, title, picture }) =>
          `<div class="tabs-tab"><div class="tab-info"><span class="tab-close" id="${id}" onclick="window.removeTab(this.id);">x</span><h1 class="tab-title">${title}</h1><h2 class="tab-link">${href}</h2></div>`
      )
      .join("</div>\n")
    : "No Tabs";

  if (data.length) {
    document.querySelectorAll(".tabs-tab").forEach((e) =>
      e.addEventListener("click", function () {
        document
          .querySelectorAll(".tabs-tab")
          .forEach((e) => e.classList.remove("tab-active"));
        this.classList.add("tab-active");
        document
          .querySelectorAll(".tab-frame")
          .forEach((e) => (e.style.display = "none"));
        document.querySelector(
          `iframe[data-uuid="${this.querySelector(".tab-close").id}"]`
        ).style.display = "block";
      })
    );
  }

  window._init = true;

  return;
}

if (!window._init) loadTabs();
</script>

<div class="tabs">
  <div class="tabs-btn" id="tabs-btn">
    <div class="arrow arrow-1"></div>
    <br />
    <div class="arrow arrow-2"></div>
  </div>

  <div class="tabs-list" id="tabs-list">Loading...</div>
</div>
